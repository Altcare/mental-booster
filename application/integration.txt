/*
 * Guide de l'application
 */

-----------
 Structure
-----------

 --- css/
     --- normalize.css / min.css
         Reset css pour homogeniser les navigateurs

     --- setup.scss
         Parametres de configuration de style: ATTENTION: c'est du SCSS
         INFO -> contient un parametre: $isDEV, pour faire des tests en DEV
                 en DEV, permet de faire un swipe sur les fiches

     --- style.scss
         Le style de la page: *-quizz.html, *-result.html, email.html
         Genere le fichier style.css : ATTENTION: c'est du SCSS

     --- supplements.scss
         Le style de la page: supplements.html
         Genere le fichier supplements.css : ATTENTION: c'est du SCSS

 --- img/
     --- icones/
     --- products/
         Toutes les images des produits

     --- supplements/
         Toutes les images des supplements

 --- js/
     --- deficienciens-quizz.js
         Le code associé a la page: deficienciens-quizz.html

     --- deficienciens-result.js
         Le code associé a la page: deficienciens-quizz.html

     --- deficienciens.json
         BDD des questions: Quizz Carences

     --- jquery2.min.js
         jQuery, meme version que utilisé sur mentalbooster.eu

     --- nature-quizz.js
         Le code associé a la page: nature-quizz.html

     --- nature-result.js
         Le code associé a la page: nature-quizz.html

     --- nature.json
         BDD des questions: Quizz Dominance

     --- products.json
         BDD des products

     --- supplements.js
         Le code associé a la page: supplements.html

     --- supplements.json
         BDD des supplements

 --- templates/
     Ce sont les templates pour chaque catégorie, databindé via les fichiers JSON
     --- products.tmpl
     --- questions.tmpl
     --- supplements.tmpl

--- deficienciens-quizz.html
    Page de démarrage quizz: carences
    INFO -> contient des parametres en bas de page pour faire des tests en DEV

--- deficienciens-result.html
    Page de résultats quizz: carences
    INFO -> contient des parametres en bas de page pour faire des tests en DEV

--- email.html
    Page de résultats quizz: carences
    INFO -> contient des parametres en bas de page pour faire des tests en DEV

--- index.html
    Page de test pour aller en mode dev sur differentes endroits

--- manifest.json
    Config de l'appli, mode mobile: plus pour tester en mode réaliste

--- nature-quizz.html
    Page de démarrage quizz: dominance
    INFO -> contient des parametres en bas de page pour faire des tests en DEV

--- nature-result.html
    Page de démarrage quizz: dominance
    INFO -> contient des parametres en bas de page pour faire des tests en DEV

--- supplements.html
    Page des supplements/produits
    INFO -> contient des parametres en bas de page pour faire des tests en DEV


-----------
 Parcours:
-----------

L'utilisateur arrive sur (nature-quizz.html)
Apres les ecrans d'introduction, les questions sont chargé depuis (nature.json)

A la suite de ses réponses le résultat est enregistré dans (window.sessionStorage)

L'utilisateur arrive sur (nature-results.html), son score est calculé a partir du contenu dans
(window.sessionStorage), on lui affice les informations par rapport au quizz et le resultat est
maintenant enregistré dans (window.localStorage : NatureScore)

L'utilisateur arrive sur (deficienceis-quizz.html)
Apres les ecrans d'introduction, les questions sont chargé depuis (deficienceis.json)

L'utilisateur arrive sur (deficienceis-results.html), son score est calculé a partir du contenu dans
(window.sessionStorage), on lui affice les informations par rapport au quizz et le resultat est
maintenant enregistré dans (window.localStorage : DeficiencyScore)

L'utilisateur arrive sur (supplements.html)
On récupere le score du quizz des deficiences, et on lui calcule l'affichage des supplements/products
Ses products personalisées sont enregistré dans (window.localStorage : Recommendations)

-------
 Tests
-------

En bas de chaque page html il y a (a supprimer en prod)
    <script>
        /*
            * Reglages Temportaires
            * A supprimer pour la PROD
            */
        var isProduction      = true;
        var nbrQuizzQuestions = 5;
    </script>

Qui permet de faire des tests divers

(affiche des messages d'information dans la console de Chrome)
isProduction = true

(permet de que charger une certaine nombre de questions pour chaque neurotransmetteur)
nbrQuizzQuestions = x


Pour faire des enregistrements en BDD, il suffit d'ajouter un handler sur l'etape voulu
Toutes les informations sont en window.localStorage()

    var data = window.localStorage.getItem("Recommendations");
    $.ajax({
        url     : '/webservice.php',
        type    : 'POST',
        data    : { json: JSON.stringify(data) },
        dataType: 'json'
    });